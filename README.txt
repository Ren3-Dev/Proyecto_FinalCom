# Proyecto Final de Compiladores â€“ BMLang

Compilador para el lenguaje **BMLang** desarrollado en Flex, Bison y C. Incluye una interfaz web con Flask para subir archivos `.ml` y ver el cÃ³digo de tres direcciones generado.

## ðŸ§  Requisitos

- Ubuntu / WSL
- `make`, `flex`, `bison`, `gcc`
- Python 3 + Flask

### Instalar dependencias (si aÃºn no estÃ¡n):

```bash
sudo apt update
sudo apt install flex bison gcc make python3-venv

ðŸš€ CÃ³mo ejecutar el proyecto

1. Clonar el repositorio
git clone https://github.com/tu-usuario/Proyecto_FinalCom.git
cd Proyecto_FinalCom

2. Crear y activar el entorno virtual
python3 -m venv venv
source venv/bin/activate

3. Instalar Flask
pip install flask

4. Compilar el compilador
make

5. Ejecutar el servidor web
python server.py

Abrir navegador en: http://localhost:5000



ðŸ“‚ Estructura del proyecto
lexer.l â€“ Analizador lÃ©xico

parser.y â€“ Analizador sintÃ¡ctico y generador de cÃ³digo intermedio

main.c â€“ Enlace entre parser y archivo fuente

server.py â€“ Interfaz Flask

public/index.html â€“ Interfaz web

uploads/ â€“ Archivos temporales

README.md â€“ Este documento


Proyecto_FinalCom/   
â”œâ”€â”€ lexer.l
â”œâ”€â”€ parser.y
â”œâ”€â”€ main.c
â”œâ”€â”€ Makefile
â”œâ”€â”€ server.py
â”œâ”€â”€ public/
â”‚   â”œâ”€â”€ index.html
â”‚   â””â”€â”€ style.css
â”œâ”€â”€ uploads/
â”œâ”€â”€ ejemplo.ml
â”œâ”€â”€ README.md  ðŸ‘ˆ
â””â”€â”€ venv/ (NO se sube, se ignora con .gitignore)


Agradecimientos al gato de Augusto que lo acompaÃ±o en todo el desrollo
